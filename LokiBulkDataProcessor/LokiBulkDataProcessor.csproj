<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <AssemblyName>LokiBulkDataProcessor</AssemblyName>
    <RootNamespace>Loki.BulkDataProcessor</RootNamespace>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Title>Loki Bulk Data Processor</Title>
    <Authors>Stephen Rebner</Authors>
    <Summary>
      Ultra-fast bulk insert library for .NET with Web API-safe multi-execution support. Handles models, DataTables, IDataReaders, JSON, logging, and mapping.
    </Summary>
    <Description>
      Loki Bulk Data Processor is a high-performance .NET library for fast, scalable bulk data ingestion using SQL Server's Bulk Copy engine.
      Now safe for repeated execution in ASP.NET Core Web APIs (v7.0+). Supports saving from model collections, DataTables, IDataReaders, and JSON streams.
      Ideal for ETL workflows, demo environments, and real-time processing. Includes mapping, structured logging (v6+), and flexible dependency injection.

      For tutorials and demos, visit the Loki Software YouTube channel: https://www.youtube.com/channel/UCZSEs5w0PEySBdb9uFE19FQ/playlists
    </Description>
    <PackageIcon>icon.png</PackageIcon>
    <PackageProjectUrl>https://www.youtube.com/channel/UCZSEs5w0PEySBdb9uFE19FQ/playlists</PackageProjectUrl>
    <RepositoryUrl>https://github.com/stephen-rebner/loki-bulk-data-processor</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>
      loki bulk data processor sql sqlserver bulk-copy data-import datareader datatable json-stream structured-logging etl aspnetcore dependency-injection high-performance csharp stephen-rebner
    </PackageTags>
    <Version>7.0.1</Version>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <PackageReleaseNotes><![CDATA[
        Fixed a compatibility issue with Azure Functions where synchronous stream parsing caused a System.InvalidOperationException. Replaced JsonDocument.Parse with JsonDocument.ParseAsync in BulkProcessor.SaveAsync to comply with async I/O requirements. Refactored JsonDataReader to accept a pre-parsed JsonDocument, improving separation of concerns and stream lifecycle control. These changes enhance hosting compatibility and align with ASP.NET Core best practices.
]]></PackageReleaseNotes>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageIcon>icon.png</PackageIcon>
  </PropertyGroup>
  <ItemGroup>
    <Compile Remove="Repository\**" />
    <EmbeddedResource Remove="Repository\**" />
    <None Remove="Repository\**" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="FastMember" Version="1.5.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.1" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="8.0.1" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="8.0.1" />
    <PackageReference Include="System.Data.SqlClient" Version="4.8.6" />
    <PackageReference Include="Testcontainers.MsSql" Version="4.1.0" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath>
      </PackagePath>
    </None>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
  <ItemGroup>
   <None Include="icon.png" Pack="true" PackagePath="\" />
  </ItemGroup>
</Project>